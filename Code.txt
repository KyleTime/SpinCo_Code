function turnRight() {
    motocart.move(1)
    motocart.rotate(90)

    for(let index = 0; index < minRight + 1; index++)
    {
        motocart.move(1)
    }
}
function turnLeft() {
    for (let index = 0; index < 6; index++) {
        motocart.move(1)
    }
    motocart.rotate(-90)
    for (let index = 0; index < 6 + minLeft; index++) {
        motocart.move(1)
    }
}
function goStraight() {
    //was 8 when worked last
    for (let index = 0; index < 7 + minStraight; index++) {
        motocart.move(1)
    }
}

function followGPS() {
    let gps = motocart.getGpsDirection()
    if (gps == 1) {
        turnLeft()
    }
    else if (gps == 2) {
        turnRight()
    }
    else if (gps == 3) {
        goStraight()
    }
}

function followRight() {
    if (!(motocart.isSidewalkRight())) {
        motocart.rotate(90)
    } else if (motocart.isSidewalkAhead()) {
        motocart.rotate(-90)
    }
    motocart.move(1)
    /*if (motocart.isAtStop()) {
        state = "checking"
        motocart.pauseAtStopSign()
    }*/
}

function main() {
    startTime = gameplay.timeQuery(GAME_TIME)
    while (true) {
        if (state == "orienting") {
            motocart.rotate(90)
            if (motocart.isSidewalkRight()) {
                state = "follow"
            }
        } else if (state == "follow") {

            if (motocart.isPassengerInCart()) {
                state = "followDP";
            }
            else {
                motocart.findNewPassenger()
                state = "followPK";
            }
        }
        else if (state == "followPK") {
            if (motocart.isCartAtDestination()) {
                motocart.pickUpPassenger()
                state = "follow"
            }
            else if (motocart.isAtStop()) {
                motocart.pauseAtStopSign()
                followGPS()
            }
            else {
                followRight();
            }
        }
        else if (state == "followDP") {
            if (motocart.isCartAtDestination()) {
                motocart.dropOffPassenger()
                state = "follow"
            }
            else if (motocart.isAtStop()) {
                motocart.pauseAtStopSign()
                followGPS()
            }
            else {
                followRight();
            }
        }
        else if (state == "checking") {
            if (motocart.canRightTurn()) {
                state = "right turn"
            } else if (motocart.canGoStraight()) {
                state = "straight"
            } else if (motocart.canLeftTurn()) {
                state = "left turn"
            }
        } else if (state == "straight") {
            goStraight()
            state = "follow"
        } else if (state == "left turn") {
            turnLeft()
            state = "follow"
        } else if (state == "right turn") {
            turnRight()
            state = "follow"
        }
    }
}
player.onChat("bat", function () {
    player.say(motocart.batteryLevel())
})

player.onChat("time", function () {
    player.say(((gameplay.timeQuery(GAME_TIME) - startTime) / 20.0) + " seconds")
})

player.onChat("run", function () {
    main()
})

let state = ""
// states ["orienting", "follow", "followPK", "followDP", "checking", "left turn", "right turn", "straight"]
state = "orienting"
let minLeft = 3
let minStraight = 3
let minRight = 3

let startTime = 0
